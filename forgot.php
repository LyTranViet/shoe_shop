<?php
require_once __DIR__ . '/includes/init.php';
require_once __DIR__ . '/vendor/autoload.php'; // N·∫°p PHPMailer v√† c√°c th∆∞ vi·ªán kh√°c

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

$db = get_db();

// --- C·∫•u h√¨nh PHPMailer v·ªõi SMTP c·ªßa Gmail ---
define('SMTP_HOST', 'smtp.gmail.com');
define('SMTP_USERNAME', 'lyviettran01@gmail.com'); // Email Gmail c·ªßa b·∫°n
define('SMTP_PASSWORD', 'akfh swgt kosz tpgc'); // THAY TH·∫æ B·∫∞NG M·∫¨T KH·∫®U ·ª®NG D·ª§NG 16 K√ù T·ª∞ C·ª¶A B·∫†N
define('SMTP_PORT', 587); // Ho·∫∑c 465 n·∫øu b·∫°n d√πng SMTPS
define('SMTP_SECURE', PHPMailer::ENCRYPTION_STARTTLS); // Ho·∫∑c PHPMailer::ENCRYPTION_SMTPS
define('SENDER_NAME', 'Shoe Shop');

// Qu·∫£n l√Ω c√°c b∆∞·ªõc b·∫±ng session
$step = $_SESSION['reset_step'] ?? 'enter_email';

/**
 * H√†m g·ª≠i m√£ OTP qua Mailjet
 */
function send_otp_email($email, $otp) {
    $mail = new PHPMailer(true);
    try {
        // C·∫•u h√¨nh Server
        $mail->isSMTP();
        $mail->Host       = SMTP_HOST;
        $mail->SMTPAuth   = true;
        $mail->Username   = SMTP_USERNAME;
        $mail->Password   = SMTP_PASSWORD;
        $mail->SMTPSecure = SMTP_SECURE;
        $mail->Port       = SMTP_PORT;
        $mail->CharSet = 'UTF-8';

        // Ng∆∞·ªùi g·ª≠i v√† ng∆∞·ªùi nh·∫≠n
        $mail->setFrom(SMTP_USERNAME, SENDER_NAME);
        $mail->addAddress($email);

        // N·ªôi dung
        $mail->isHTML(true);
        $mail->Subject = "M√£ OTP ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n";
        $mail->Body    = "
                <div style='font-family:Arial,sans-serif;font-size:16px;'>
                    <h3>Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u</h3>
                    <p>M√£ OTP c·ªßa b·∫°n l√†: <b style='font-size:20px; color:#ff6600;'>$otp</b></p>
                    <p>M√£ n√†y s·∫Ω h·∫øt h·∫°n sau 2 ph√∫t. Vui l√≤ng kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai.</p>
                    <hr><small style='color:#888;'>Shoe Shop</small>
                </div>";

        $mail->send();
        return ['success' => true];
    } catch (Exception $e) {
        // Tr·∫£ v·ªÅ th√¥ng b√°o l·ªói chi ti·∫øt t·ª´ PHPMailer
        return ['success' => false, 'message' => "L·ªói PHPMailer: {$mail->ErrorInfo}"];
    }
}

/**
 * H√†m t·∫°o v√† l∆∞u m√£ OTP
 */
function generate_and_store_otp($db, $email) {
    $otp = rand(100000, 999999);
    $expires = date('Y-m-d H:i:s', time() + 120); // H·∫øt h·∫°n sau 2 ph√∫t

    // X√≥a OTP c≈© n·∫øu c√≥
    $db->prepare("DELETE FROM password_resets WHERE email = ?")->execute([$email]);
    // L∆∞u OTP m·ªõi v√†o b·∫£ng password_resets
    $stmt = $db->prepare("INSERT INTO password_resets (email, token, expires_at) VALUES (?, ?, ?)");
    $stmt->execute([$email, $otp, $expires]);

    return $otp;
}

// X·ª≠ l√Ω logic theo t·ª´ng b∆∞·ªõc
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $action = $_POST['action'] ?? '';

    // B∆∞·ªõc 1: G·ª≠i email ch·ª©a OTP
    if ($action === 'send_otp') {
        $email = trim($_POST['email'] ?? '');
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            flash_set('error', 'ƒê·ªãa ch·ªâ email kh√¥ng h·ª£p l·ªá.');
        } else {
            $stmt = $db->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            if ($stmt->fetch()) {
                $otp = generate_and_store_otp($db, $email);
                $send_result = send_otp_email($email, $otp); // G·ªçi h√†m m·ªõi
                if ($send_result['success']) { // Ki·ªÉm tra k·∫øt qu·∫£
                    $_SESSION['reset_email'] = $email;
                    $_SESSION['reset_step'] = 'verify_otp';
                    flash_set('success', 'M√£ OTP ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn email c·ªßa b·∫°n.');
                    header('Location: forgot.php');
                    exit;
                } else {
                    // Hi·ªÉn th·ªã l·ªói chi ti·∫øt t·ª´ PHPMailer
                    flash_set('error', 'L·ªói g·ª≠i email: ' . htmlspecialchars($send_result['message']));
                }
            } else {
                flash_set('error', 'Email kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng.');
            }
        }
    }

    // B∆∞·ªõc 2: X√°c th·ª±c OTP
    elseif ($action === 'verify_otp') {
        $otp_input = trim($_POST['otp'] ?? '');
        $email = $_SESSION['reset_email'] ?? '';

        if (empty($otp_input) || empty($email)) {
            flash_set('error', 'Phi√™n l√†m vi·ªác ƒë√£ h·∫øt h·∫°n. Vui l√≤ng th·ª≠ l·∫°i.');
            $_SESSION['reset_step'] = 'enter_email';
        } else {
            $stmt = $db->prepare("SELECT token, expires_at FROM password_resets WHERE email = ? AND token = ?");
            $stmt->execute([$email, $otp_input]);
            $reset_request = $stmt->fetch();

            if ($reset_request && strtotime($reset_request['expires_at']) > time()) {
                $_SESSION['reset_step'] = 'reset_password';
                // X√≥a token sau khi x√°c th·ª±c th√†nh c√¥ng ƒë·ªÉ tr√°nh d√πng l·∫°i
                $db->prepare("DELETE FROM password_resets WHERE email = ?")->execute([$email]);
                flash_set('success', 'X√°c th·ª±c OTP th√†nh c√¥ng. Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u m·ªõi.');
            } else {
                flash_set('error', 'M√£ OTP kh√¥ng ch√≠nh x√°c ho·∫∑c ƒë√£ h·∫øt h·∫°n.');
            }
        }
    }

    // B∆∞·ªõc 3: ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
    elseif ($action === 'reset_password') {
        $password = $_POST['password'] ?? '';
        $password_confirm = $_POST['password_confirm'] ?? '';
        $email = $_SESSION['reset_email'] ?? '';

        if (empty($email)) {
            flash_set('error', 'Phi√™n l√†m vi·ªác ƒë√£ h·∫øt h·∫°n. Vui l√≤ng th·ª≠ l·∫°i.');
            $_SESSION['reset_step'] = 'enter_email';
        } elseif (empty($password) || strlen($password) < 6) {
            flash_set('error', 'M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±.');
        } elseif ($password !== $password_confirm) {
            flash_set('error', 'M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp.');
        } else {
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            $update_stmt = $db->prepare("UPDATE users SET password = ? WHERE email = ?");
            $update_stmt->execute([$hashed_password, $email]);

            unset($_SESSION['reset_step'], $_SESSION['reset_email']);
            flash_set('success', 'M·∫≠t kh·∫©u c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i th√†nh c√¥ng. Vui l√≤ng ƒëƒÉng nh·∫≠p.');
            header('Location: login.php');
            exit;
        }
    }

    // G·ª≠i l·∫°i m√£ OTP
    elseif ($action === 'resend_otp') {
        $email = $_SESSION['reset_email'] ?? '';
        if (!empty($email)) {
            $otp = generate_and_store_otp($db, $email);
            $send_result = send_otp_email($email, $otp); // G·ªçi h√†m m·ªõi
            if ($send_result['success']) {
                flash_set('success', 'M√£ OTP m·ªõi ƒë√£ ƒë∆∞·ª£c g·ª≠i l·∫°i.');
            } else {
                flash_set('error', 'L·ªói g·ª≠i l·∫°i m√£: ' . htmlspecialchars($send_result['message'])); // Hi·ªÉn th·ªã l·ªói m·ªõi
            }
        } else {
            flash_set('error', 'Phi√™n l√†m vi·ªác ƒë√£ h·∫øt h·∫°n.');
            $_SESSION['reset_step'] = 'enter_email';
        }
    }

    // Quay l·∫°i b∆∞·ªõc nh·∫≠p email
    elseif ($action === 'back_to_email') {
        unset($_SESSION['reset_step'], $_SESSION['reset_email']);
        header('Location: forgot.php');
        exit;
    }
}

// C·∫≠p nh·∫≠t l·∫°i step sau khi x·ª≠ l√Ω POST
$step = $_SESSION['reset_step'] ?? 'enter_email';

require_once __DIR__ . '/includes/header.php';
?>

<style>
.auth-card {
  width: 100%;
  max-width: 420px;
  background: #fff;
  border-radius: 18px;
  padding: 38px 32px 32px 32px;
  box-shadow: 0 8px 32px rgba(15,23,42,0.13);
  border: 1px solid #e3e8ee;
  margin: 48px auto; /* CƒÉn gi·ªØa form sau khi b·ªè form-auth */
}
.auth-head {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 2px;
  margin-bottom: 22px;
}
.auth-head h2 {
  margin: 0 0 2px 0;
  font-size: 2rem;
  color: #0f1724;
  font-weight: 800;
  letter-spacing: -1px;
  display: flex;
  align-items: center;
  gap: 10px;
}
.auth-head h2::before {
  content: 'üîë';
  font-size: 1.5rem;
  margin-right: 2px;
}
.auth-sub {
  margin: 0 0 0 2px;
  color: #64748b;
  font-size: 1rem;
  font-weight: 500;
}
.form-row { margin-bottom: 20px; }
.form-row label { display: block; font-weight: 700; margin-bottom: 7px; color: #334155; font-size: 15px; letter-spacing: 0.1px; }
.input {
  width: 100%;
  padding: 13px 15px;
  border-radius: 10px;
  border: 1.5px solid #e6eefb;
  background: #f8fafc;
  font-size: 16px;
  box-sizing: border-box;
  transition: box-shadow .13s, border-color .13s;
}
.input:focus {
  outline: none;
  border-color: #38bdf8;
  box-shadow: 0 0 0 2px #bae6fd;
}
.btn {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 12px 20px;
  border-radius: 10px;
  background: linear-gradient(90deg,#0ea5ff 60%,#2563eb 100%);
  color: #fff;
  border: 0;
  cursor: pointer;
  font-weight: 700;
  font-size: 1rem;
  box-shadow: 0 2px 8px rgba(14,165,233,0.07);
  transition: background 0.18s;
}
.btn.secondary {
  background: #64748b;
  color: #fff;
  font-weight: 600;
}
.small { padding: 8px 12px; font-size: 14px; }
.alert {
  padding: 13px 16px;
  border-radius: 9px;
  margin-bottom: 18px;
  font-size: 1rem;
  display: flex;
  align-items: center;
  gap: 10px;
  font-weight: 600;
}
.alert.error {
  background: #fff1f2;
  color: #b91c1c;
  border: 1.5px solid #fecaca;
}
.alert.error::before { content: '\26A0'; font-size: 1.3em; }
.alert.success {
  background: #ecfdf5;
  color: #047857;
  border: 1.5px solid #bbf7d0;
}
.alert.success::before { content: '\2714'; font-size: 1.2em; }
.form-actions {
  margin-top: 28px;
  display: flex;
  gap: 12px;
  align-items: center;
  justify-content: flex-start;
}
</style>

<div>
    <div class="auth-card">
        <div class="auth-head">
            <h2>Qu√™n m·∫≠t kh·∫©u</h2>
            <div class="auth-sub">L·∫•y l·∫°i quy·ªÅn truy c·∫≠p v√†o t√†i kho·∫£n c·ªßa b·∫°n</div>
        </div>
        <?php if ($m = flash_get('error')): ?><div class="alert error"><?= htmlspecialchars($m) ?></div><?php endif; ?>
        <?php if ($m = flash_get('success')): ?><div class="alert success"><?= htmlspecialchars($m) ?></div><?php endif; ?>

        <?php if ($step === 'enter_email'): ?>
            <p class="auth-sub" style="margin-bottom: 20px;">Nh·∫≠p ƒë·ªãa ch·ªâ email c·ªßa b·∫°n. Ch√∫ng t√¥i s·∫Ω g·ª≠i m√£ OTP ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.</p>
            <form method="post">
                <input type="hidden" name="action" value="send_otp">
                <div class="form-row">
                    <label for="email">Email</label>
                    <input id="email" name="email" type="email" class="input" required placeholder="you@example.com">
                </div>
                <div class="form-actions">
                    <button class="btn" type="submit">G·ª≠i m√£ OTP</button>
                    <a href="login.php" class="btn secondary small">Quay l·∫°i</a>
                </div>
            </form>

        <?php elseif ($step === 'verify_otp'): ?>
            <p class="auth-sub" style="margin-bottom: 20px;">M√£ OTP ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn <strong><?= htmlspecialchars($_SESSION['reset_email']) ?></strong>. Vui l√≤ng nh·∫≠p m√£ v√†o √¥ b√™n d∆∞·ªõi.</p>
            <form method="post">
                <input type="hidden" name="action" value="verify_otp">
                <div class="form-row">
                    <label for="otp">M√£ OTP</label>
                    <input id="otp" name="otp" type="text" class="input" required inputmode="numeric" pattern="\d{6}">
                </div>
                <div class="form-actions">
                    <button class="btn" type="submit">X√°c nh·∫≠n</button>
            </form>
            <form method="post" style="margin-left: 10px;">
                <input type="hidden" name="action" value="resend_otp">
                <button type="submit" class="btn secondary small">G·ª≠i l·∫°i m√£</button>
            </form>
            <form method="post" style="margin-left: 10px;">
                <input type="hidden" name="action" value="back_to_email">
                <button type="submit" class="btn secondary small">Quay l·∫°i</button>
            </form>
            </div>

        <?php elseif ($step === 'reset_password'): ?>
            <p class="auth-sub" style="margin-bottom: 20px;">X√°c th·ª±c th√†nh c√¥ng. Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u m·ªõi cho t√†i kho·∫£n <strong><?= htmlspecialchars($_SESSION['reset_email']) ?></strong>.</p>
            <form method="post">
                <input type="hidden" name="action" value="reset_password">
                <div class="form-row">
                    <label for="password">M·∫≠t kh·∫©u m·ªõi</label>
                    <input id="password" name="password" type="password" class="input" required>
                </div>
                <div class="form-row">
                    <label for="password_confirm">X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi</label>
                    <input id="password_confirm" name="password_confirm" type="password" class="input" required>
                </div>
                <div class="form-actions">
                    <button class="btn" type="submit">L∆∞u m·∫≠t kh·∫©u</button>
                </div>
            </form>
        <?php endif; ?>
    </div>
</div>

<?php require_once __DIR__ . '/includes/footer.php'; ?>